#!/bin/bash

# don't forget to create an entry in /etc/hosts
# pick an available IP: https://en.wikipedia.org/wiki/Private_network
# (this is an example local IP)
# 127.125.0.20 numnum.local
# if you're on a mac, you'll also need to add it to the loopback config:
# sudo ifconfig lo0 alias 127.125.0.19

export LOCAL_APP_HOSTNAME=numnum.local
export COMPOSE_SERVICE_NAME='backend'
export LOCAL_APP_IP=$(grep -E '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' /etc/hosts | grep ${LOCAL_APP_HOSTNAME}  | awk '{ print $1 }' | head -n 1)


if [[ -z $LOCAL_APP_IP ]]; then
    echo “Error: no entry found in /etc/hosts for ${LOCAL_APP_HOSTNAME}”
    exit 1
else
    echo "Found ${LOCAL_APP_HOSTNAME} entry in /etc/hosts using IP ${LOCAL_APP_IP}"
fi


case $1 in
    b | build)
        docker compose -f docker-compose.yml build "${@:2}"
    ;;

    bnc | buildnc)
        docker compose -f docker-compose.yml build  --no-cache "${@:2}"
    ;;

    s | serve)
        docker compose -f docker-compose.yml up "${@:2}"
    ;;

    ssh) # ssh access to the main app
        docker-compose  run --rm  $COMPOSE_SERVICE_NAME /bin/bash -l "${@:2}"
    ;;

    db) # stand up the DB locally
        docker-compose  run --rm  db "${@:2}"
    ;;

    manage)
        docker-compose  run --rm  $COMPOSE_SERVICE_NAME python manage.py "${@:2}"
    ;;

    sh | shell)
        docker-compose  run --rm  $COMPOSE_SERVICE_NAME /bin/bash -lc 'python manage.py shell'
    ;;

    t | test)
        docker-compose  run --rm  $COMPOSE_SERVICE_NAME /bin/bash -lc 'DJANGO_LOG_LEVEL=WARNING python -m pytest'
    ;;

    migrate)
        docker-compose  run --rm  $COMPOSE_SERVICE_NAME python manage.py migrate "${@:2}"
    ;;

    mm | makemigrations)
        docker-compose  run --rm  $COMPOSE_SERVICE_NAME python manage.py makemigrations "${@:2}"
    ;;

    *)
        echo "unknown command $1"
    ;;
esac
