version: "3.8"

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - ./.dockerdata/postgres:/var/lib/postgresql/data
    ports:
      - "${LOCAL_APP_IP}:5432:5432"
    expose:
      - 5432

  frontend:
    image: node:18.14
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    working_dir: /frontend
    environment:
      CHOKIDAR_USEPOLLING: 'true'
      NODE_OPTIONS: '--max-http-header-size=100000'
    expose:
      - 5173
    command: /bin/sh -c 'yarn install && yarn dev'

  backend:
    build: .
    user: root
    command:
      - "bash"
      - "-lc"
      - |
        python manage.py migrate; \
        python manage.py collectstatic --noinput; \
        python manage.py runserver 0.0.0.0:8000;

    env_file:
      - ".dev.env"
    volumes:
      - ./backend/apps/:/app/backend/apps
      - ./backend/manage.py:/app/backend/manage.py
      - ./backend/pyproject.toml:/app/backend/pyproject.toml
      - ./backend/numnum:/app/backend/numnum

    ports:
      - "${LOCAL_APP_IP}:8000:8000"
    expose:
      - 8000
    depends_on:
      - db
    links:
      - db

  nginx:
    image: nginx:1.17
    ports:
        - '${LOCAL_APP_IP}:80:80'
    volumes:
        - ./nginx-proxy.conf:/etc/nginx/conf.d/nginx-proxy.conf
        - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
        - frontend
        - backend
